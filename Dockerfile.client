# Bare bones linux
FROM alpine:3.8 AS checkout

# Update apline linux and add git.
RUN apk update && apk upgrade && apk add --no-cache git openssh

# Clone the wormhole repo.
RUN mkdir /app && cd /app && git clone https://github.com/certusone/wormhole.git .

# syntax=docker.io/docker/dockerfile:1.3@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2
FROM docker.io/library/rust:1.49@sha256:a50165ea96983c21832578afb1c8c028674c965bc1ed43b607871b1f362e06a5 AS build

RUN apt-get update && apt-get install -y libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang
RUN rustup component add rustfmt
RUN rustup default nightly-2021-08-01

WORKDIR /usr/src/bridge

RUN cargo install wasm-pack --vers 0.9.1

ENV RUST_LOG="solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=trace,solana_bpf_loader=debug,solana_rbpf=debug"
ENV EMITTER_ADDRESS="11111111111111111111111111111115"
ENV BRIDGE_ADDRESS="Bridge1p5gheXUvJ6jGWGeCsgPKgnE3YgdGKRVCMY9o"

COPY --from=checkout /app/solana/bridge bridge
COPY --from=checkout /app/solana/modules modules
COPY --from=checkout /app/solana/solitaire solitaire
COPY --from=checkout /app/solana/migration migration
COPY --from=checkout /app/solana/pyth2wormhole pyth2wormhole

# Compile Wormhole
RUN cd bridge/program && /usr/local/cargo/bin/wasm-pack build --target nodejs -d nodejs -- --features wasm

# Compile Token Bridge
RUN cd modules/token_bridge/program && /usr/local/cargo/bin/wasm-pack build --target nodejs -d nodejs -- --features wasm

# Compile NFT Bridge
RUN cd modules/nft_bridge/program && /usr/local/cargo/bin/wasm-pack build --target nodejs -d nodejs -- --features wasm

#syntax=docker/dockerfile:1.2@sha256:e2a8561e419ab1ba6b2fe6cbdf49fd92b95912df1cf7d313c3e2230a333fdbcc
FROM docker.io/library/rust:1.49@sha256:a50165ea96983c21832578afb1c8c028674c965bc1ed43b607871b1f362e06a5

RUN apt-get update && apt-get install -yq libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang ncat
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && apt-get install -y nodejs
RUN curl -sSfL https://release.solana.com/v1.8.1/install | sh

RUN rustup default nightly-2021-08-01
RUN rustup component add rustfmt

RUN cargo install --version =2.0.12 spl-token-cli

ENV SOLANA_BIN_PATH="/root/.local/share/solana/install/active_release/bin"
ENV PATH="$SOLANA_BIN_PATH:$PATH"

COPY --from=checkout /app/ethereum /usr/src/ethereum
WORKDIR /usr/src/ethereum
RUN npm ci

COPY --from=checkout /app/clients/token_bridge /usr/src/clients/token_bridge
COPY --from=build /usr/src/bridge/bridge/program/nodejs /usr/src/clients/token_bridge/pkg/core
COPY --from=build /usr/src/bridge/modules/token_bridge/program/nodejs /usr/src/clients/token_bridge/pkg/token
WORKDIR /usr/src/clients/token_bridge
RUN sed -i 's/localhost/solana-devnet/g' main.ts
RUN set -xe && \
	npm ci && \
	npm run build-contracts && \
	npm run build

COPY --from=checkout /app/clients/nft_bridge /usr/src/clients/nft_bridge
COPY --from=build /usr/src/bridge/bridge/program/nodejs /usr/src/clients/nft_bridge/pkg/core
COPY --from=build /usr/src/bridge/modules/nft_bridge/program/nodejs /usr/src/clients/nft_bridge/pkg/nft
WORKDIR /usr/src/clients/nft_bridge
RUN sed -i 's/localhost/solana-devnet/g' main.ts
RUN set -xe && \
	npm ci && \
	npm run build-contracts && \
	npm run build

COPY --from=checkout /app/solana /usr/src/solana
COPY --from=checkout /app/proto /usr/src/proto

WORKDIR /usr/src/solana
RUN sed -i 's/127.0.0.1/solana-devnet/g' devnet_setup.sh

RUN solana config set --keypair "/usr/src/solana/keys/solana-devnet.json"
RUN solana config set --url "http://solana-devnet:8899"

ENV EMITTER_ADDRESS="11111111111111111111111111111115"
ENV BRIDGE_ADDRESS="Bridge1p5gheXUvJ6jGWGeCsgPKgnE3YgdGKRVCMY9o"

RUN set -xe && \
    cargo build --manifest-path ./bridge/Cargo.toml --package client --release && \
    cargo build --manifest-path ./modules/token_bridge/Cargo.toml --package client --release && \
    cp bridge/target/release/client /usr/local/bin && \
    cp modules/token_bridge/target/release/client /usr/local/bin/token-bridge-client

RUN wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && chmod +x wait-for-it.sh